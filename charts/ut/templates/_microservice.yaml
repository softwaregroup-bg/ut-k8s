{{- define "ut.microservice" -}}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ut.fullname" . }}-{{ .params.name }}
  labels:
    app: {{ template "ut.name" . }}
    chart: {{ template "ut.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ default .Values.image.repository .params.repo}}
    app.kubernetes.io/instance: {{ template "ut.name" . }}-{{ .params.name }}-{{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: {{ template "ut.name" . }}-{{ .params.name }}
    app.kubernetes.io/part-of: ut
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{ if hasKey .params "replicaCount" -}}
  replicas: {{ .params.replicaCount }}
  {{ else -}}
  replicas: {{ .Values.replicaCount }}
  {{ end -}}
  selector:
    matchLabels:
      app: {{ template "ut.name" . }}-{{ .params.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ut.name" . }}-{{ .params.name }}
        version: {{ .Chart.Version }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      volumes:
        - name: config-volume-standard
          configMap:
            name: {{ .Release.Name }}-standard-rc
        - name: config-volume-ctp
          configMap:
            name: {{ .Release.Name }}-ctp-rc
      containers:
        - name: {{ .Chart.Name }}-{{ .params.app | lower }}
          image: "{{ default .Values.image.repository .params.repo}}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['./ut-microservice', 'server/ms/{{ .params.app }}']
          env:
          - name: UT_ENV
            value: {{ .Values.microservice.env }}
          - name: UT_APP
            value: server/ms/{{ .params.app }}
          ports:
            - containerPort: {{ default 8080 .params.http }}
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ default 8080 .params.http }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ default 8080 .params.http }}
          volumeMounts:
          - name: config-volume-standard
            mountPath: /etc/ut_standard_{{ .Values.microservice.env }}
          - name: config-volume-ctp
            mountPath: /etc/ut_ctp_{{ .Values.microservice.env }}
          resources:
            limits:
              memory: 250M
              cpu: 1
            requests:
              memory: 100M
              cpu: 0.20
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ $services := default (list .params.name) .params.services -}}
{{ $dot := . -}}
{{ range $service := $services -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $service }}
  labels:
    app: {{ template "ut.name" $dot }}
    chart: {{ template "ut.chart" $dot }}
    release: {{ $dot.Release.Name }}
    heritage: {{ $dot.Release.Service }}
    app.kubernetes.io/name: {{ default .Values.image.repository .params.repo}}
    app.kubernetes.io/instance: {{ template "ut.name" . }}-{{ .params.name }}-{{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/component: {{ template "ut.name" . }}-{{ .params.name }}
    app.kubernetes.io/part-of: ut
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: {{ default "ClusterIP" $dot.params.type}}
  ports:
    - port: {{ default 8080 $dot.params.http }}
      protocol: TCP
      name: http
  selector:
    app: {{ template "ut.name" $dot }}-{{ $dot.params.name }}
    release: {{ $dot.Release.Name }}
{{ end -}}
{{ end -}}
